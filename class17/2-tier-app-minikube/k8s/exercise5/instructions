kubectl create secret generic db-secret --from-literal=DB_LINK="postgresql://postgres:admin12345@minikube-postgres-db.cfykukwcw419.ap-south-1.rds.amazonaws.com:5432/postgres" \
 -n app

 kubectl create secret docker-registry aws-secret \
  --docker-server=366140438193.dkr.ecr.ap-south-1.amazonaws.com \
  --docker-username=AWS \
  --docker-password="$(aws ecr get-login-password --region ap-south-1)"  \
  -n app

  
# App sync with image change 



Chnage one one of the argo app to point to k8s/exercise5/ directory. apply the argo menifest
- see the changes in argo app
- also change the app name and lets see if it chnages that
- Now push the changes to repo and sync the argo app
- Now update the image tag to k8s2 and push the changes to repo

cd student-portal/src
run docker bake command to build or run maulal docker build commands
ecr login > 
aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 366140438193.dkr.ecr.ap-south-1.amazonaws.com

docker buildx bake app --push

Or ->
aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 366140438193.dkr.ecr.ap-south-1.amazonaws.com

 docker build -t 366140438193.dkr.ecr.ap-south-1.amazonaws.com/student-portal:k8s2  --platform="linux/amd64"
    docker push 366140438193.dkr.ecr.ap-south-1.amazonaws.com/student-portal:k8s2