name: studentportal build-deploy

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'class6/src/**'
  #     - '.github/workflows/day8-deploy.yaml'

  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  IMAGE_REPO_NAME: 879381241087.dkr.ecr.ap-south-1.amazonaws.com/bootcamp-dev-student-portal
  IMAGE_TAG: ${{ github.sha }}  # Use the commit SHA as the image tag
  ECS_APP_CONTAINER_NAME: student-portal
  ECS_TASK_DEFINITION: dev-student-portal
  ECS_SERVICE: dev-student-portal-service
  ECS_CLUSTER: dev-student-portal-cluster

jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: "{{defaultContext}}:class6/src"
            push: true
            tags: ${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}

    deploy:
      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Download task definition for web
          if: ${{ github.ref == 'refs/heads/main' }}
          run: |
            aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
            --query taskDefinition > task-definition.json
            ls -l task-definition.json

        - name: Fill in the new image ID for web in the Amazon ECS task definition
          if: ${{ github.ref == 'refs/heads/main' }}
          id: task-def-web
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: task-definition.json
            container-name: ${{ env.ECS_APP_CONTAINER_NAME }}
            image: ${{ env.IMAGE_REPO_NAME }}:${{ github.sha }}

        - name: Deploy app on Amazon ECS task definition
          if: ${{ github.ref == 'refs/heads/main' }}
          uses: aws-actions/amazon-ecs-deploy-task-definition@v2
          with:
            task-definition: ${{ steps.task-def-web.outputs.task-definition }}
            service: ${{ env.ECS_SERVICE }}
            cluster: ${{ env.ECS_CLUSTER }}
            wait-for-service-stability: true